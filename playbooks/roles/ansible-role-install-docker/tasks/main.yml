# roles/ansible-role-install-docker/tasks/main.yml

- name: Download Docker installation script
  ansible.builtin.get_url:
    url: https://get.docker.com
    dest: /tmp/get-docker.sh
    mode: '0755'

- name: Run Docker installation script
  ansible.builtin.command: sh /tmp/get-docker.sh
  args:
    creates: /usr/bin/docker

- name: Add user to docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true

- name: Create directory for Docker systemd service override
  ansible.builtin.file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: '0755'

- name: Create systemd override configuration for Docker
  ansible.builtin.copy:
    dest: /etc/systemd/system/docker.service.d/override.conf
    content: |
      [Service]
      ExecStart=
      ExecStart=/usr/bin/dockerd
    mode: '0644'

- name: Create Docker daemon configuration
  ansible.builtin.copy:
    dest: /etc/docker/daemon.json
    content: |
      {
        "hosts": [
          "unix:///var/run/docker.sock",
          "tcp://0.0.0.0:2375"
        ],
        "metrics-addr": "0.0.0.0:9323",
        "experimental": true,
        "debug" : false
      }
    mode: '0644'

- name: Update cmdline.txt to enable memory cgroup
  ansible.builtin.lineinfile:
    path: /boot/firmware/cmdline.txt
    line: "cgroup_enable=memory cgroup_memory=1"
    state: present

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true

- name: Restart Docker service
  ansible.builtin.systemd:
    name: docker
    state: restarted
    enabled: true

- name: Verify Docker service status
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true
  register: docker_status
  failed_when: false

- name: Print Docker status
  ansible.builtin.debug:
    msg: "{{ docker_status.status }}"
